{"version":3,"sources":["commons/layout/Flex.js","commons/layout/Text.js","commons/Header.js","pages/home/image/ImageFadeInOut.js","pages/home/cards/Card.js","pages/home/cards/CardContainer.js","pages/home/Home.js","App.js","styles/animations/FadeInOut.js","serviceWorker.js","index.js"],"names":["columnStyles","css","centerStyles","Flex","styled","div","column","center","styles","centerTextStyles","StyledText","p","size","as","Text","props","variant","rest","containerStyles","theme","primaryColor","borderRadius","titleStyles","Header","images","ImgContainer","topStyles","bottomStyles","StyledImg","img","index","fadeInOut","length","ImageFadeInOut","map","image","i","key","src","process","textStyles","Card","text","cardContainerStyles","cards","CardContainer","Home","n","t","d","AppWrapper","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.980e6dd8.chunk.js","sourcesContent":["import styled, { css } from 'styled-components'\n\nconst columnStyles = css`\n  flex-direction: column;\n`\n\nconst centerStyles = css`\n  ${columnStyles}\n  justify-content: center;\n  align-items: center;\n`\n\n\nexport const Flex = styled.div`\n  display: flex;\n  ${({ column }) => column && columnStyles}\n  ${({ center }) => center && centerStyles}\n  ${({ styles }) => styles}\n`\n\n\n\n\n\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst centerTextStyles = css`\n  text-align: center;\n`\n\nconst StyledText = styled.p`\n  margin: 0;\n  transition: all 0.1s ease-in-out;\n  font-size: ${({ size }) => size ? size + 'px' : '1rem'};\n  ${({ center }) => center && centerTextStyles}\n  \n  ${({ styles }) => styles}\n  \n  @media (max-width: 48rem) {\n    font-size:  ${({ as }) => as === 'h2' ? '4vw' : '3vw'};\n  }\n`\n\nexport const Text = props => {\n  const { variant, ...rest } = props\n  return (\n    <StyledText\n      {...rest}\n      as={variant}\n    />\n  )\n}\n\n\n","import React from 'react'\nimport { css } from 'styled-components'\nimport { Flex } from './layout/Flex'\nimport { Text } from './layout/Text'\n\nconst containerStyles = css`\n  background: ${props => props.theme.primaryColor};\n  color: white;\n  font-size: 1rem;\n  border-radius: ${props => props.theme.borderRadius};\n  margin-bottom: 1rem;\n`\n\nconst titleStyles = css`\n  text-shadow: rgba(0, 0, 0, 0.5) 0px 1px 3px;\n  padding: 1rem;\n  @media (max-width: 48rem) {\n    padding: 0.5rem;\n  }\n`\n\nconst Header = () => (\n  <Flex center styles={containerStyles}>\n    <Text center variant='h2' size={28} styles={titleStyles}>Header</Text>\n  </Flex>\n)\n\nexport { Header }\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst transition = 2;\nconst duration = 5;\n\nconst images = [\n  '/images/carousel/1.jpg',\n  '/images/carousel/2.jpg',\n  '/images/carousel/3.jpg',\n  '/images/carousel/4.jpg',\n  '/images/carousel/5.jpg',\n  '/images/carousel/6.jpg'\n]\n\nconst ImgContainer = styled.div`\n  position: relative;\n  width: 60%;\n  @media only screen and (max-width: 75rem) {\n    width: 80%;\n  }\n  @media only screen and (max-width: 48rem) {\n    width: 100%;\n  }\n`\n\nconst topStyles = css`\n  position: relative;\n`\n\nconst bottomStyles = css`\n  position: absolute;\n`\n\nconst StyledImg = styled.img`\n  width: 100%;\n  transition: opacity ${transition}s ease-in-out;\n  ${({ theme, index }) => theme.fadeInOut(index, images.length, transition, duration)}\n  box-shadow: 5px 5px 5px #aaa;\n \n  ${({ styles }) => styles}\n  border-radius: ${props => props.theme.borderRadius}; \n`\n\n\nexport const ImageFadeInOut = () => (\n  <ImgContainer>\n    {images.map((image, i) => <StyledImg key={i} index={i} styles={i === images.length - 1 ? topStyles : bottomStyles} src={process.env.PUBLIC_URL + image} />)}\n  </ImgContainer>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { Text } from '../../../commons/layout/Text'\n\nconst ImgContainer = styled.div`\n  margin: 1rem 0.5rem;\n  :first-child {\n    margin-left: 0;\n  }\n  :last-child {\n    margin-right: 0;\n  }\n  @media (max-width: 48rem) {\n    margin: 1rem 0 0 0;\n  }\n  padding: 4rem 0.5rem;\n  @media (max-width: 48rem) {\n    padding: 2rem 0.5rem;\n  }\n  flex: 1 1 33%;\n\n  background-image: url(${({ image }) => image});\n  background-size: cover;\n  border-radius: ${props => props.theme.borderRadius};\n  background-position: center;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst textStyles = css`\n  color: white;\n  text-shadow: rgba(0, 0, 0, 0.5) 0px 1px 3px;\n  font-weight: 500;\n`\n\nexport const Card = ({ image, text }) => (\n  <ImgContainer image={process.env.PUBLIC_URL + image}>\n    <Text center size={24} variant='h2' styles={textStyles}>{text}</Text>\n  </ImgContainer>\n\n)\n","import { Flex } from '../../../commons/layout/Flex'\nimport { Card } from './Card'\nimport React from 'react'\nimport { css } from 'styled-components'\n\nconst cardContainerStyles = css`\n  width: 100%;\n  @media (max-width: 48rem) {\n    flex-direction: column;\n  }\n`\n\nconst cards = [\n  {text: 'QuiÃ©nes somos', image: '/images/people.jpg'},\n  {text: 'Nuestros apartamentos', image: '/images/apartments.jpg'},\n  {text: 'Conoce el valle', image: '/images/valley.jpg'},\n]\n\nexport const CardContainer = () => (\n  <Flex styles={cardContainerStyles}>\n    {cards.map(({ text, image }, i) => <Card key={i} text={text} image={image} />)}\n  </Flex>\n)\n","import React from 'react'\nimport { Flex } from '../../commons/layout/Flex'\nimport { ImageFadeInOut } from './image/ImageFadeInOut'\nimport { CardContainer } from './cards/CardContainer'\n\n\nexport const Home = () => (\n  <Flex center>\n    <ImageFadeInOut />\n    <CardContainer />\n  </Flex>\n)\n","import React from 'react'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Header } from './commons/Header'\nimport { Home } from './pages/home/Home'\nimport { fadeInOutAnimation } from './styles/animations/FadeInOut'\n\nconst theme = {\n  primaryColor: '#1abc9c',\n  borderRadius: '0.6rem',\n  fadeInOut: fadeInOutAnimation,\n}\n\nconst AppWrapper = styled.div`\n  padding: 1rem 2rem;\n  @media (max-width: 48rem) {\n    padding: 0.5rem 1rem;\n  }\n`\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <AppWrapper>\n        <Header />\n        <Router>\n          <Switch>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n            {/*<Route path=\"/about\">*/}\n            {/*  <About />*/}\n            {/*</Route>*/}\n            {/*<Route path=\"/dashboard\">*/}\n            {/*  <Dashboard />*/}\n            {/*</Route>*/}\n          </Switch>\n        </Router>\n      </AppWrapper>\n    </ThemeProvider>\n\n  )\n}\n\nexport default App\n","export const fadeInOutAnimation = (i, n, t, d) => `\n  @keyframes fadeInOutAnimation-${i} {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: ${i === 0 ? 1 : 0};\n    }\n    ${(i * 100 / n) - t * 100 / (d * n)}% {\n      opacity: 0;\n    }\n    ${i * (100 / n)}% {\n      opacity: 1;\n    }\n    ${((i + 1) * 100 / n) - t * 100 / (d * n)}% {\n      opacity: 1;\n    }\n    ${(i + 1) * (100 / n)}% {\n      opacity: 0;\n    }\n    ${100 - t * 100 / (d * n)}% {\n      opacity: ${i === n - 1 ? 1 : 0};\n    }\n  }\n  animation: fadeInOutAnimation-${i} ${d * n}s ease-in-out infinite;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}